package edu.ub.prog2.BernabePauVinyalsNilMartinezMiriam.vista;

import edu.ub.prog2.BernabePauVinyalsNilMartinezMiriam.controlador.Controlador;
import edu.ub.prog2.utils.AplicacioException;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

public class AplicacioUB4 extends javax.swing.JFrame {

    Controlador controlador = new Controlador();
    FrmAfegirFitxerMultimedia frm;
    static boolean estaparat;

    /**
     * Creates new form finestra
     */
    public AplicacioUB4() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotoBiblioteca = new javax.swing.JButton();
        addFile = new javax.swing.JButton();
        Sortir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        llistaBiblio = new javax.swing.JList<>();
        botoEliminar = new javax.swing.JButton();
        botoRecuperar = new javax.swing.JButton();
        botoSaveExit = new javax.swing.JButton();
        repCiclicaBiblioteca = new javax.swing.JButton();
        repAleatoriaBiblioteca = new javax.swing.JButton();
        repCiclicaAlbum = new javax.swing.JButton();
        repAleatoriaAlbum = new javax.swing.JButton();
        play = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jump = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        llistaAlbum = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        afegirFAlbum = new javax.swing.JButton();
        eliminiarFAlbum = new javax.swing.JButton();
        afegirAlbum = new javax.swing.JButton();
        eliminarAlbum = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        nomAlbum = new javax.swing.JTextPane();
        mostrarLlistatAlbums = new javax.swing.JButton();
        mostrarContenidoA = new javax.swing.JButton();
        ON1 = new javax.swing.JLabel();
        OFF1 = new javax.swing.JLabel();
        ON2 = new javax.swing.JLabel();
        OFF2 = new javax.swing.JLabel();
        ON3 = new javax.swing.JLabel();
        OFF3 = new javax.swing.JLabel();
        ON4 = new javax.swing.JLabel();
        OFF4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inforPerMeode = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotoBiblioteca.setText("Mostrar Biblioteca");
        BotoBiblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BotoBibliotecaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BotoBibliotecaMouseExited(evt);
            }
        });
        BotoBiblioteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotoBibliotecaActionPerformed(evt);
            }
        });

        addFile.setText("Afegir Fitxer");
        addFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addFileMouseExited(evt);
            }
        });
        addFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileActionPerformed(evt);
            }
        });

        Sortir.setText("Sortir");
        Sortir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SortirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SortirMouseExited(evt);
            }
        });
        Sortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortirActionPerformed(evt);
            }
        });

        llistaBiblio.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(llistaBiblio);

        botoEliminar.setText("Eliminar Fitxer");
        botoEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botoEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botoEliminarMouseExited(evt);
            }
        });
        botoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoEliminarActionPerformed(evt);
            }
        });

        botoRecuperar.setText("Recuperar Dades");
        botoRecuperar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botoRecuperarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botoRecuperarMouseExited(evt);
            }
        });
        botoRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoRecuperarActionPerformed(evt);
            }
        });

        botoSaveExit.setText("Sortir i Guardar Dades");
        botoSaveExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botoSaveExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botoSaveExitMouseExited(evt);
            }
        });
        botoSaveExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoSaveExitActionPerformed(evt);
            }
        });

        repCiclicaBiblioteca.setText("Reproducció Ciclica");
        repCiclicaBiblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                repCiclicaBibliotecaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                repCiclicaBibliotecaMouseExited(evt);
            }
        });
        repCiclicaBiblioteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repCiclicaBibliotecaActionPerformed(evt);
            }
        });

        repAleatoriaBiblioteca.setText("Reproducció Aleatoria");
        repAleatoriaBiblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                repAleatoriaBibliotecaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                repAleatoriaBibliotecaMouseExited(evt);
            }
        });
        repAleatoriaBiblioteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repAleatoriaBibliotecaActionPerformed(evt);
            }
        });

        repCiclicaAlbum.setText("Reproducció Ciclica");
        repCiclicaAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                repCiclicaAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                repCiclicaAlbumMouseExited(evt);
            }
        });
        repCiclicaAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repCiclicaAlbumActionPerformed(evt);
            }
        });

        repAleatoriaAlbum.setText("Reproducció Aleatoria");
        repAleatoriaAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                repAleatoriaAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                repAleatoriaAlbumMouseExited(evt);
            }
        });
        repAleatoriaAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repAleatoriaAlbumActionPerformed(evt);
            }
        });

        play.setText("play");
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                playMouseExited(evt);
            }
        });
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        pause.setText("pause");
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pauseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pauseMouseExited(evt);
            }
        });
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        stop.setText("stop");
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stopMouseExited(evt);
            }
        });
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        jump.setText("saltar");
        jump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jumpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jumpMouseExited(evt);
            }
        });
        jump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpActionPerformed(evt);
            }
        });

        llistaAlbum.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(llistaAlbum);

        jLabel1.setText("Biblioteca");

        jLabel2.setText("Album");

        afegirFAlbum.setText("Afegir Fitxer");
        afegirFAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                afegirFAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                afegirFAlbumMouseExited(evt);
            }
        });
        afegirFAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afegirFAlbumActionPerformed(evt);
            }
        });

        eliminiarFAlbum.setText("Eliminar Fitxer");
        eliminiarFAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eliminiarFAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eliminiarFAlbumMouseExited(evt);
            }
        });
        eliminiarFAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminiarFAlbumActionPerformed(evt);
            }
        });

        afegirAlbum.setText("Afegir Album");
        afegirAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                afegirAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                afegirAlbumMouseExited(evt);
            }
        });
        afegirAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afegirAlbumActionPerformed(evt);
            }
        });

        eliminarAlbum.setText("Eliminar Album");
        eliminarAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eliminarAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eliminarAlbumMouseExited(evt);
            }
        });
        eliminarAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarAlbumActionPerformed(evt);
            }
        });

        jLabel4.setText("Nom Album:");

        nomAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nomAlbumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nomAlbumMouseExited(evt);
            }
        });
        jScrollPane4.setViewportView(nomAlbum);

        mostrarLlistatAlbums.setText("Mostrar llistat d'albums");
        mostrarLlistatAlbums.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mostrarLlistatAlbumsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mostrarLlistatAlbumsMouseExited(evt);
            }
        });
        mostrarLlistatAlbums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarLlistatAlbumsActionPerformed(evt);
            }
        });

        mostrarContenidoA.setText("Mostrar contingut del Album");
        mostrarContenidoA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mostrarContenidoAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mostrarContenidoAMouseExited(evt);
            }
        });
        mostrarContenidoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarContenidoAActionPerformed(evt);
            }
        });

        ON1.setText("ON");

        OFF1.setText("OFF");

        ON2.setText("ON");

        OFF2.setText("OFF");

        ON3.setText("ON");

        OFF3.setText("OFF");

        ON4.setText("ON");

        OFF4.setText("OFF");

        inforPerMeode.setColumns(20);
        inforPerMeode.setRows(5);
        jScrollPane3.setViewportView(inforPerMeode);

        jLabel3.setText("Informació:");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(botoRecuperar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(botoEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotoBiblioteca)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(repCiclicaBiblioteca, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repAleatoriaBiblioteca, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sortir)
                        .addGap(30, 30, 30)
                        .addComponent(botoSaveExit)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(eliminarAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(afegirAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(afegirFAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eliminiarFAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mostrarLlistatAlbums)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(mostrarContenidoA)))
                        .addGap(63, 63, 63))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(ON1)
                .addGap(18, 18, 18)
                .addComponent(OFF1)
                .addGap(99, 99, 99)
                .addComponent(ON2)
                .addGap(18, 18, 18)
                .addComponent(OFF2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(repCiclicaAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(repAleatoriaAlbum)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ON3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OFF3)
                .addGap(108, 108, 108)
                .addComponent(ON4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OFF4)
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pause)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jump, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mostrarLlistatAlbums))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BotoBiblioteca)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(addFile)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botoEliminar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(afegirAlbum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminarAlbum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(afegirFAlbum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eliminiarFAlbum)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mostrarContenidoA)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(repCiclicaAlbum)
                            .addComponent(repAleatoriaAlbum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ON3)
                            .addComponent(OFF3)
                            .addComponent(ON4)
                            .addComponent(OFF4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jump, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(repAleatoriaBiblioteca)
                            .addComponent(repCiclicaBiblioteca))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ON1)
                            .addComponent(OFF1)
                            .addComponent(ON2)
                            .addComponent(OFF2))
                        .addGap(89, 89, 89)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sortir)
                    .addComponent(botoRecuperar)
                    .addComponent(botoSaveExit))
                .addGap(47, 47, 47)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //mostrar biblioteca
    private void BotoBibliotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotoBibliotecaActionPerformed

        actualitzar();
    }//GEN-LAST:event_BotoBibliotecaActionPerformed
    //Aquest mètode refrescarà l'aparença de la biblioteca
    public void actualitzar() {
        DefaultListModel<String> biblio = new DefaultListModel<>();
        if (!controlador.mostrarBiblioteca().isEmpty()) {
            Iterator<String> it = controlador.mostrarBiblioteca().iterator();
            while (it.hasNext()) {
                biblio.addElement(it.next());
            }
        } else {
            biblio.addElement("Biblioteca Buida");
        }
        llistaBiblio.setModel(biblio);
    }
    //Refresca l'aparença del contingut d'un dels albums
    public void mostrar() {
        DefaultListModel<String> album = new DefaultListModel<>();

        if (!controlador.mostrarLlistatAlbums().isEmpty()) {
            if (!nomAlbum.getText().isEmpty() && controlador.existeixAlbum(nomAlbum.getText())) {
                Iterator<String> it = controlador.mostrarAlbum(nomAlbum.getText()).iterator();
                while (it.hasNext()) {
                    album.addElement(it.next());
                }
            } else {
                album.addElement("buida");
            }
        } else {
            album.addElement("buida");
        }
        llistaAlbum.setModel(album);
    }
    //Refresca el contingut de la llista d'albums
    public void mostrarAlbums() {
        DefaultListModel<String> llistaAlbums = new DefaultListModel<>();
        if (!controlador.mostrarLlistatAlbums().isEmpty()) {
            Iterator<String> it = controlador.mostrarLlistatAlbums().iterator();
            while (it.hasNext()) {
                llistaAlbums.addElement(it.next());
            }
        } else {
            llistaAlbums.addElement("Buit");
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "No hi ha albums",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
        }
        llistaAlbum.setModel(llistaAlbums);
    }
    //desplega el dialog per afegir un fitxer
    private void addFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileActionPerformed
        frm = new FrmAfegirFitxerMultimedia(this, true, this.controlador);
        frm.setVisible(true);
    }//GEN-LAST:event_addFileActionPerformed
    //sortir
    private void SortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SortirActionPerformed
    //elimina fitxer de la biblioteca
    private void botoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoEliminarActionPerformed
       if (!controlador.mostrarBiblioteca().isEmpty()) {
            if (llistaBiblio.isSelectedIndex(llistaBiblio.getLeadSelectionIndex())) {
                int id = llistaBiblio.getLeadSelectionIndex();
                try {
                    controlador.esborrarFitxer( id+1);
                } catch (AplicacioException ex) {
                    ex.getMessage();
                    Object[] options = {"OK", "CANCEL"};
                    JOptionPane.showOptionDialog(null, "Comprova que el nom del album estigui bé",
                            "click Ok to continue",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                }
            } else {
                AplicacioException exep = new AplicacioException();
                exep.getCause();
                Object[] options = {"OK", "CANCEL"};
                JOptionPane.showOptionDialog(null, "Introdueix el nom del album on vulguis eliminar el fitxer o comprova que el nom del album sigui correcte",
                        "click Ok to continue",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            }
            
        } else {
            AplicacioException exep = new AplicacioException();
            exep.getCause();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "L'album ja està buit",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        this.actualitzar();
    
           
    }//GEN-LAST:event_botoEliminarActionPerformed

    //guarda dades i surt de l'app
    private void botoSaveExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoSaveExitActionPerformed
        try {
            controlador.guardarDadesDisc("dades.dat");
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error al guardar dades",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        System.exit(0);
    }//GEN-LAST:event_botoSaveExitActionPerformed
    //Recuperem de dades.dat 
    private void botoRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoRecuperarActionPerformed

        try {
            controlador.carregarDadesDisc("dades.dat");
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error al recuperar dades",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        actualitzar();
        mostrarAlbums();
    }//GEN-LAST:event_botoRecuperarActionPerformed
    //Reproduim la biblio en ciclica
    private void repCiclicaBibliotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repCiclicaBibliotecaActionPerformed
        controlador.setejaContinua();
        try {
            controlador.reproduirCarpeta();
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        ON1.setVisible(true);
        OFF1.setVisible(false);
        ON2.setVisible(false);
        OFF2.setVisible(true);
        ON3.setVisible(false);
        OFF3.setVisible(true);
        ON4.setVisible(false);
        OFF4.setVisible(true);
    }//GEN-LAST:event_repCiclicaBibliotecaActionPerformed
    //play-reempren
    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        if (estaparat == true) {  //si s'ha aturat el fitxer farà l'opcio per reprendre'l
            try {
                controlador.reemprenReproduccio();
                estaparat = false;
            } catch (AplicacioException ex) {
                ex.getMessage();
                Object[] options = {"OK", "CANCEL"};
                JOptionPane.showOptionDialog(null, "Error",
                        "click Ok to continue",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            }
        } else {     //en el cas que no s'hagi aturat un video agafarà i reproduirà un fitxer sol, el seleccionat de la biblioteca
            int id = this.llistaBiblio.getSelectedIndex(); //posarem el valor de la id de l'element seleccionat a la llista de biblioteca
            controlador.setejaContinua(); //setajarem la continua
            controlador.reproduirFitxer(id);
        }
    }//GEN-LAST:event_playActionPerformed
//pause
    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        try {
            controlador.pausaReproduccio();
            estaparat = true;
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
    }//GEN-LAST:event_pauseActionPerformed
//parar
    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        try {
            controlador.aturaReproduccio();
            estaparat = true;
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
    }//GEN-LAST:event_stopActionPerformed
//saltar
    private void jumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpActionPerformed
        try {
            controlador.saltaReproduccio();
        } catch (AplicacioException ex) {
            ex.getMessage();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "Error",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
    }//GEN-LAST:event_jumpActionPerformed
//reproduccio aleatoria de la biblio
    private void repAleatoriaBibliotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repAleatoriaBibliotecaActionPerformed
        controlador.setejaAleatoria();
        try {
            controlador.reproduirCarpeta();
        } catch (AplicacioException ex) {
            ex.getMessage();
        }
        ON2.setVisible(true);
        ON1.setVisible(false);
        OFF2.setVisible(false);
        OFF1.setVisible(true);
        ON3.setVisible(false);
        OFF3.setVisible(true);
        ON4.setVisible(false);
        OFF4.setVisible(true);
    }//GEN-LAST:event_repAleatoriaBibliotecaActionPerformed
//reproduccio ciclica album
    private void repCiclicaAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repCiclicaAlbumActionPerformed
        controlador.setejaContinua();

        controlador.setejaTitol(nomAlbum.getText());
        try {
            controlador.reproduirCarpeta(nomAlbum.getText());
        } catch (AplicacioException ex) {
            ex.getMessage();
        }
        ON1.setVisible(false);
        OFF1.setVisible(true);
        ON2.setVisible(false);
        OFF2.setVisible(true);
        ON3.setVisible(true);
        OFF3.setVisible(false);
        ON4.setVisible(false);
        OFF4.setVisible(true);
    }//GEN-LAST:event_repCiclicaAlbumActionPerformed
//reproduccio aleatoria album
    private void repAleatoriaAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repAleatoriaAlbumActionPerformed
        controlador.setejaAleatoria();

        controlador.setejaTitol(nomAlbum.getText());
        try {
            controlador.reproduirCarpeta(nomAlbum.getText());
        } catch (AplicacioException ex) {
            ex.getMessage();
        }
        ON1.setVisible(false);
        OFF1.setVisible(true);
        ON2.setVisible(false);
        OFF2.setVisible(true);
        ON3.setVisible(false);
        OFF3.setVisible(true);
        ON4.setVisible(true);
        OFF4.setVisible(false);
    }//GEN-LAST:event_repAleatoriaAlbumActionPerformed
//Afegir un fitxer a l'album
    private void afegirFAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afegirFAlbumActionPerformed

        if (!controlador.mostrarBiblioteca().isEmpty()) {
            if (llistaBiblio.isSelectedIndex(llistaBiblio.getLeadSelectionIndex())) {
                if (!nomAlbum.getText().isEmpty() && controlador.existeixAlbum(nomAlbum.getText())) {
                    int id = llistaBiblio.getLeadSelectionIndex();
                    try {
                        controlador.afegirFitxer(nomAlbum.getText(), id);
                    } catch (AplicacioException ex) {
                        ex.getMessage();
                        Object[] options = {"OK", "CANCEL"};
                        JOptionPane.showOptionDialog(null, "Comprova que el nom del album estigui bé",
                                "click Ok to continue",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                    }
                } else {
                    AplicacioException exep = new AplicacioException();
                    exep.getCause();
                    Object[] options = {"OK", "CANCEL"};
                    JOptionPane.showOptionDialog(null, "Introdueix el nom del album on vulguis "
                            + "afegir el fitxer o comprova que el nom del album sigui el correcte",
                            "click Ok to continue",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                }
            } else {
                AplicacioException exep = new AplicacioException();
                exep.getCause();
                Object[] options = {"OK", "CANCEL"};
                JOptionPane.showOptionDialog(null, "Selecciona un fitxer",
                        "click Ok to continue",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            }
        } else {
            AplicacioException exep = new AplicacioException();
            exep.getCause();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "La biblioteca esta buida afegeix el fitxer",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        mostrar();
    }//GEN-LAST:event_afegirFAlbumActionPerformed
//Eliminar un album de la llista
    private void eliminarAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarAlbumActionPerformed
        if (!controlador.mostrarLlistatAlbums().isEmpty()) {
            if (!nomAlbum.getText().isEmpty() && controlador.existeixAlbum(nomAlbum.getText())) {
                controlador.esborrarAlbum(nomAlbum.getText());
            } else {
                Object[] options = {"OK", "CANCEL"};
                JOptionPane.showOptionDialog(null, "Comprova que el nom del album estigui bé o introdueix algun nom",
                        "click Ok to continue", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            }
        } else {
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "no hi ha albums que eliminar",
                    "click Ok to continue", JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        mostrarAlbums();
    }//GEN-LAST:event_eliminarAlbumActionPerformed
//Afegir un album a la llista
    private void afegirAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afegirAlbumActionPerformed
        if (!nomAlbum.getText().isEmpty() && !controlador.existeixAlbum(nomAlbum.getText())) {
            controlador.afegirAlbum(nomAlbum.getText());
            
        } else {
            AplicacioException exep = new AplicacioException();
            exep.getCause();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "No hi ha nom introduit o el nom del album ja existeix",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        mostrarAlbums();
    }//GEN-LAST:event_afegirAlbumActionPerformed
//Eliminar un fitxer de l'album desitjat
    private void eliminiarFAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminiarFAlbumActionPerformed
        if (!controlador.mostrarAlbum(nomAlbum.getText()).isEmpty()) {
            if (!nomAlbum.getText().isEmpty() && controlador.existeixAlbum(nomAlbum.getText())) {
                if (llistaAlbum.isSelectedIndex(llistaAlbum.getLeadSelectionIndex())) {
                    int id = llistaAlbum.getLeadSelectionIndex();
                    try {
                        controlador.esborrarFitxer(nomAlbum.getText(), id);
                    } catch (AplicacioException ex) {
                        ex.getMessage();
                        Object[] options = {"OK", "CANCEL"};
                        JOptionPane.showOptionDialog(null, "Comprova que el nom del album estigui bé",
                                "click Ok to continue",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                    }
                } else {
                    AplicacioException exep = new AplicacioException();
                    exep.getCause();
                    Object[] options = {"OK", "CANCEL"};
                    JOptionPane.showOptionDialog(null, "Introdueix el nom del album on vulguis eliminar el fitxer o comprova que el nom del album sigui correcte",
                            "click Ok to continue",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                }
            } else {
                AplicacioException exep = new AplicacioException();
                exep.getCause();
                Object[] options = {"OK", "CANCEL"};
                JOptionPane.showOptionDialog(null, "Selecciona un fitxer",
                        "click Ok to continue",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            }
        } else {
            AplicacioException exep = new AplicacioException();
            exep.getCause();
            Object[] options = {"OK", "CANCEL"};
            JOptionPane.showOptionDialog(null, "L'album ja està buit",
                    "click Ok to continue",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }
        mostrar();
    }//GEN-LAST:event_eliminiarFAlbumActionPerformed
//Mostrar el llistat d'albums actualitzar
    private void mostrarLlistatAlbumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarLlistatAlbumsActionPerformed
        mostrarAlbums();
    }//GEN-LAST:event_mostrarLlistatAlbumsActionPerformed

    private void mostrarContenidoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarContenidoAActionPerformed
        mostrar();
    }//GEN-LAST:event_mostrarContenidoAActionPerformed
//METODES INFORMATIUS
    private void addFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFileMouseEntered
        inforPerMeode.setText("Omple el formulari segons les caractaristiques del fitxer, s'ha de seleccionar si es Video o Audio, despres es completa el formulari.");
    }//GEN-LAST:event_addFileMouseEntered

    private void addFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFileMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_addFileMouseExited

    private void botoEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoEliminarMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_botoEliminarMouseExited

    private void botoEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoEliminarMouseEntered
        inforPerMeode.setText("Hauràs de fer click sobre l'element que vulguis borrar a dins del llistat de la biblioteca.");
    }//GEN-LAST:event_botoEliminarMouseEntered

    private void BotoBibliotecaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotoBibliotecaMouseEntered
        inforPerMeode.setText("Podràs veure la biblioteca posada com una llista en el recuadre inferior del botó.");
    }//GEN-LAST:event_BotoBibliotecaMouseEntered

    private void BotoBibliotecaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotoBibliotecaMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_BotoBibliotecaMouseExited

    private void repCiclicaBibliotecaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repCiclicaBibliotecaMouseEntered
        inforPerMeode.setText("Donant-li a aquest botó es reprodueix la biblioteca sencera de forma ciclica.");
    }//GEN-LAST:event_repCiclicaBibliotecaMouseEntered

    private void repCiclicaBibliotecaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repCiclicaBibliotecaMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_repCiclicaBibliotecaMouseExited

    private void repAleatoriaBibliotecaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repAleatoriaBibliotecaMouseEntered
        inforPerMeode.setText("Donant-li a aquest botó es reprodueix la biblioteca de forma aleatoria.");
    }//GEN-LAST:event_repAleatoriaBibliotecaMouseEntered

    private void repAleatoriaBibliotecaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repAleatoriaBibliotecaMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_repAleatoriaBibliotecaMouseExited

    private void botoRecuperarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoRecuperarMouseEntered
        inforPerMeode.setText("Donant-li en aquest botó es recuperen les dades guardades a dades.dat.");
    }//GEN-LAST:event_botoRecuperarMouseEntered

    private void botoRecuperarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoRecuperarMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_botoRecuperarMouseExited

    private void playMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseEntered
        inforPerMeode.setText("Amb aquest botó fent click inicial a una cançó es reproduirà aquesta només. \n I si el fitxer ha sigut parat servirà per reprendre la reproducció. ");
    }//GEN-LAST:event_playMouseEntered

    private void playMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_playMouseExited

    private void pauseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseEntered
        inforPerMeode.setText("Amb aquest botó parem la reproducció, el play la reependrà al mateix lloc.");
    }//GEN-LAST:event_pauseMouseEntered

    private void pauseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_pauseMouseExited

    private void stopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseEntered
        inforPerMeode.setText("Amb aquest botó parem la reproducció, el play la reependrà a l'inici de l'archiu.");
    }//GEN-LAST:event_stopMouseEntered

    private void stopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_stopMouseExited

    private void jumpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jumpMouseEntered
        inforPerMeode.setText("Amb aquest botó si tenim activada qualsevol reproduccio de més d'un element, passem al seguent.");
    }//GEN-LAST:event_jumpMouseEntered

    private void jumpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jumpMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_jumpMouseExited

    private void SortirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SortirMouseEntered
        inforPerMeode.setText("Tanca la app");
    }//GEN-LAST:event_SortirMouseEntered

    private void SortirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SortirMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_SortirMouseExited

    private void botoSaveExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoSaveExitMouseEntered
        inforPerMeode.setText("Tanca i desa la biblioteca i els albums perque els puguis recuperar.");
    }//GEN-LAST:event_botoSaveExitMouseEntered

    private void botoSaveExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoSaveExitMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_botoSaveExitMouseExited

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        inforPerMeode.setText("Hola em dic Sirius i seré el teu assistent durant aquesta aventura per la practica 4. \n Patrocinat per: Nil Viñals, Miriam Martinez i Pau Bernabé. \n Que esperen treure una bona nota en aquesta practica ;D ");
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_jLabel3MouseExited

    private void repCiclicaAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repCiclicaAlbumMouseEntered
        inforPerMeode.setText("Escrtiu el nom del album que vulguis reproduir a on diu: Nom Album: i donant-li a aquest botó es reproduirà ciclicament l'album desitjat.");
    }//GEN-LAST:event_repCiclicaAlbumMouseEntered

    private void repCiclicaAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repCiclicaAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_repCiclicaAlbumMouseExited

    private void repAleatoriaAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repAleatoriaAlbumMouseEntered
        inforPerMeode.setText("Escrtiu el nom del album que vulguis reproduir a on diu: Nom Album: i donant-li a aquest botó es reproduirà aleatoriament l'album desitjat.");
    }//GEN-LAST:event_repAleatoriaAlbumMouseEntered

    private void repAleatoriaAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repAleatoriaAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_repAleatoriaAlbumMouseExited

    private void mostrarContenidoAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarContenidoAMouseEntered
        inforPerMeode.setText("A través d'inserir el nom d'un album que volem podem veure quins fitxers té al seu interior.");
    }//GEN-LAST:event_mostrarContenidoAMouseEntered

    private void mostrarContenidoAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarContenidoAMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_mostrarContenidoAMouseExited

    private void mostrarLlistatAlbumsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarLlistatAlbumsMouseEntered
        inforPerMeode.setText("Actualitza el llistat d'albums que tenim.");
    }//GEN-LAST:event_mostrarLlistatAlbumsMouseEntered

    private void mostrarLlistatAlbumsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarLlistatAlbumsMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_mostrarLlistatAlbumsMouseExited

    private void afegirAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_afegirAlbumMouseEntered
        inforPerMeode.setText("A través del nom inserit al recuadre de sobre del botó crearà un album amb el seu nom.");
    }//GEN-LAST:event_afegirAlbumMouseEntered

    private void afegirAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_afegirAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_afegirAlbumMouseExited

    private void eliminarAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarAlbumMouseEntered
        inforPerMeode.setText("Borrarà un albun segons quin nom estigui en el Nom Album.");
    }//GEN-LAST:event_eliminarAlbumMouseEntered

    private void eliminarAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_eliminarAlbumMouseExited

    private void afegirFAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_afegirFAlbumMouseEntered
        inforPerMeode.setText("1. Has de posar el nom de l'album que vols omplir. \n 2.Fas click en el recuadre de la biblioteca sobre l'element a afegir dins de l'album. \n 3. Fas click sobre aquest botó.");
    }//GEN-LAST:event_afegirFAlbumMouseEntered

    private void afegirFAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_afegirFAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_afegirFAlbumMouseExited

    private void eliminiarFAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminiarFAlbumMouseEntered
        inforPerMeode.setText("1. Has de posar el nom de l'album a on vulguis borrar un archiu. \n 2.Entra dins del contingut d'aquest i fes click sobre l'element que vols borrar. \n 3.Fes click sobre aquest botó. ");
    }//GEN-LAST:event_eliminiarFAlbumMouseEntered

    private void eliminiarFAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminiarFAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_eliminiarFAlbumMouseExited

    private void nomAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomAlbumMouseEntered
        inforPerMeode.setText("Aqui serà a on hauràs d'introduir el nom del album desitjat segons el que vulguis.");
    }//GEN-LAST:event_nomAlbumMouseEntered

    private void nomAlbumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomAlbumMouseExited
        inforPerMeode.setText("");
    }//GEN-LAST:event_nomAlbumMouseExited

    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplicacioUB4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplicacioUB4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplicacioUB4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplicacioUB4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AplicacioUB4 app = new AplicacioUB4();
                app.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotoBiblioteca;
    private javax.swing.JLabel OFF1;
    private javax.swing.JLabel OFF2;
    private javax.swing.JLabel OFF3;
    private javax.swing.JLabel OFF4;
    private javax.swing.JLabel ON1;
    private javax.swing.JLabel ON2;
    private javax.swing.JLabel ON3;
    private javax.swing.JLabel ON4;
    private javax.swing.JButton Sortir;
    private javax.swing.JButton addFile;
    private javax.swing.JButton afegirAlbum;
    private javax.swing.JButton afegirFAlbum;
    private javax.swing.JButton botoEliminar;
    private javax.swing.JButton botoRecuperar;
    private javax.swing.JButton botoSaveExit;
    private javax.swing.JButton eliminarAlbum;
    private javax.swing.JButton eliminiarFAlbum;
    private javax.swing.JTextArea inforPerMeode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jump;
    private javax.swing.JList<String> llistaAlbum;
    private javax.swing.JList<String> llistaBiblio;
    private javax.swing.JButton mostrarContenidoA;
    private javax.swing.JButton mostrarLlistatAlbums;
    private javax.swing.JTextPane nomAlbum;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JButton repAleatoriaAlbum;
    private javax.swing.JButton repAleatoriaBiblioteca;
    private javax.swing.JButton repCiclicaAlbum;
    private javax.swing.JButton repCiclicaBiblioteca;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
